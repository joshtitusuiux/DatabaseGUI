/**********************************************************
 *Filename:			SimpleGUI.java
 *Package:
 *Project:			22-SimpleGUI
 *Author:			Jmiddaugh
 *Section:			IST 311
 *Assignment:		Wk 11 - GUI interact with Access
 *Description:		
 *Date Created:		3/27/2023
 *Date Modified:	3/27/2023
 *Modifier:			Fexit Felix 
 *Changes:				
 *
*********************************************************/
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.SQLException;

public class SimpleGui extends JFrame
{
	private JComboBox cboID;
	
	private JLabel 	lblID,
					lblFirstName,
    				lblLastName,
					lblPayRate,
					lblHrWorked;

	private JTextField txtFirstName,
        				txtLastName,
        				txtPayRate,
        				txtHrWorked;
	private JButton cmdSave,		// Add and Update Button 
					cmdExit;
	
	private JPanel 	enterPersonPanel,
    				buttonPanel;
	
	private ActionListener 	listener,
							mnuItemListener;
	
	private SimpleDatabase myDB = new SimpleDatabase();
	
	public SimpleGui() throws SQLException
	{
		super("Person Data");
		
		setLayout(new GridLayout(2,1,1,1));
		
		listener = new ChoiceListener();
		mnuItemListener = new MenuItemListener();
		
		enterPersonPanel = createEnterPerson();
		buttonPanel = createButtonPanel();
		
		add(enterPersonPanel);
		add(buttonPanel);

		CreateMenu();
		
		setSize(512, 512);
		setVisible(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		cboID.setVisible(false);
		lblID.setVisible(false);
	}
	
	public void CreateMenu()
	{
		 //create a menu bar
	      final JMenuBar mnuBar = new JMenuBar();

	      //create menus
	      JMenu mnuFile = new JMenu("File");
	      JMenu mnuEdit = new JMenu("Edit"); 
	      JMenu mnuHelp = new JMenu("Help");
	     
	      //create menu items
	      JMenuItem mnuNewItem = new JMenuItem("New");
	      mnuNewItem.setMnemonic(KeyEvent.VK_N);
	      mnuNewItem.setActionCommand("New");

	      JMenuItem mnuUpdateItem = new JMenuItem("Update");
	      mnuUpdateItem.setActionCommand("Update");

	      JMenuItem mnuSaveItem = new JMenuItem("Save");
	      mnuSaveItem.setActionCommand("Save");

	      JMenuItem mnuExitItem = new JMenuItem("Exit");
	      mnuExitItem.setActionCommand("Exit");

	      JMenuItem mnuCutItem = new JMenuItem("Cut");
	      mnuCutItem.setActionCommand("Cut");

	      JMenuItem mnuCopyItem = new JMenuItem("Copy");
	      mnuCopyItem.setActionCommand("Copy");

	      JMenuItem mnuPasteItem = new JMenuItem("Paste");
	      mnuPasteItem.setActionCommand("Paste");

	      mnuNewItem.addActionListener(mnuItemListener);
	      mnuNewItem.addActionListener(mnuItemListener);

	      mnuUpdateItem.addActionListener(mnuItemListener);
	      mnuSaveItem.addActionListener(mnuItemListener);
	      mnuExitItem.addActionListener(mnuItemListener);
	      mnuCutItem.addActionListener(mnuItemListener);
	      mnuCopyItem.addActionListener(mnuItemListener);
	      mnuPasteItem.addActionListener(mnuItemListener);

	      //add menu items to menus
	      mnuFile.add(mnuNewItem);
	      mnuFile.add(mnuUpdateItem);
	      mnuFile.addSeparator();
	      mnuFile.add(mnuSaveItem);
	      mnuFile.addSeparator();
	      mnuFile.addSeparator();
	      mnuFile.add(mnuExitItem);        
	      
	      mnuEdit.add(mnuCutItem);
	      mnuEdit.add(mnuCopyItem);
	      mnuEdit.add(mnuPasteItem);

	      //add menu to mnuBar
	      mnuBar.add(mnuFile);
	      mnuBar.add(mnuEdit);
	      mnuBar.add(mnuHelp);       

	      //add mnuBar to the frame
	      setJMenuBar(mnuBar);
	      setVisible(true);     
	   }

	class MenuItemListener implements ActionListener 
	{
	    public void actionPerformed(ActionEvent e) 
	    {            
//	        JOptionPane.showMessageDialog(null, e.getActionCommand());	        
	        switch(e.getActionCommand())
	        {
	        	case "New":
	        		enterPersonPanel.setBorder(BorderFactory.createTitledBorder("Create New Employee"));
    				cmdSave.setText("Add");
    				cboID.setVisible(false);
    				lblID.setVisible(false);
    				txtFirstName.setText("");
    				txtLastName.setText("");
    				txtPayRate.setText("");
    				txtHrWorked.setText("");
	        		break;
	        	case "Update":
	        		enterPersonPanel.setBorder(BorderFactory.createTitledBorder("Select Employee to Update"));
	   				cmdSave.setText("Update");
	   				cboID.setVisible(true);
    				lblID.setVisible(true);
	        		break;
	        	case "Save":
	        		SaveData();
	        		break;
				case "Exit":
					System.exit(0);	        		
	        }
	    }    
	 }
	
	public JPanel createEnterPerson() throws SQLException
	{   
		cboID = new JComboBox(myDB.PopulateControls());
		lblID = new JLabel("Select ID:", SwingConstants.RIGHT);
		lblFirstName = new JLabel("First Name:", SwingConstants.RIGHT);
		lblLastName = new JLabel("Last Name:", SwingConstants.RIGHT);
		lblPayRate = new JLabel("Pay Rate:", SwingConstants.RIGHT);
		lblHrWorked = new JLabel("Hours Worked This Week:", SwingConstants.RIGHT);
		
		txtFirstName = new JTextField(25);
		txtFirstName.setToolTipText("Enter first name");
		txtLastName = new JTextField(25);
		txtLastName.setToolTipText("Enter last name");
		txtPayRate = new JTextField(25);
		txtPayRate.setToolTipText("Enter current pay rate");
		txtHrWorked = new JTextField(25);
		txtHrWorked.setToolTipText("Enter hours worked this week");
		
		JPanel enterPersonPanel = new JPanel();
		enterPersonPanel.setLayout(new GridLayout(5,2,1,1));
		enterPersonPanel.setBorder(BorderFactory.createTitledBorder("Create New Employee"));
		
		enterPersonPanel.add(lblID);
		enterPersonPanel.add(cboID);
		enterPersonPanel.add(lblFirstName);
		enterPersonPanel.add(txtFirstName);
		enterPersonPanel.add(lblLastName);
		enterPersonPanel.add(txtLastName);
		enterPersonPanel.add(lblPayRate);
		enterPersonPanel.add(txtPayRate);
		enterPersonPanel.add(lblHrWorked);
		enterPersonPanel.add(txtHrWorked);
		
		this.cboID.addActionListener(listener);
		
		return enterPersonPanel;
	}
	
	public JPanel createButtonPanel()
	{
		JPanel buttonPanel = new JPanel();
		
		cmdSave = new JButton("Add");
		cmdSave.addActionListener(listener);
		buttonPanel.add(cmdSave);

		cmdExit = new JButton("Exit");
		cmdExit.addActionListener(listener);
		buttonPanel.add(cmdExit);
		
		return buttonPanel;
	}
	
	class ChoiceListener implements ActionListener
	{
		public void actionPerformed(ActionEvent event)
		{
			switch(event.getActionCommand())
			{
				case "comboBoxChanged":
					
					
					
					try 
					{
						String data[] = new String[5];
						data = myDB.LoadData((String) cboID.getSelectedItem());
						txtFirstName.setText(data[1]);
						txtLastName.setText(data[2]);
						txtPayRate.setText(data[3]);
						txtHrWorked.setText(data[4]);
					} 
					catch (SQLException e) 
					{
						JOptionPane.showMessageDialog(null, e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
					}
							
					break;
				
				case "Add":
				case "Update":
					SaveData();
					break;
					
				case "Exit":
					System.exit(0);		
			}
		}
	}
	public void SaveData()
	{
		String fName;
		String lName;
		double rate = 0.0;
		double hours = 0.0;
		int result = 0;
		String strID = (String)cboID.getSelectedItem();
		int nID = Integer.parseInt(strID);


//		JOptionPane.showMessageDialog(null, nID + " " + fName + " " + lName + " " + rate + " " + hours);
		if (cmdSave.getText() == "Add")
		{
			JOptionPane.showMessageDialog(null, "Add" );
			PopulateEmployeeID();
		}
		else
		{
			JOptionPane.showMessageDialog(null, "Update ");
		}
	}
	
	public void PopulateEmployeeID()
	{
/*		
		try
		{
		} 
		catch (SQLException e) 
		{
			JOptionPane.showMessageDialog(null, e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
		}
*/				
	}

	public static void main(String[] args) throws SQLException 
	{
		new SimpleGui();
	}

}
